K8scrud was successfully deployed to the "{{ include "k8scrud.namespaceName" . }}" namespace of your cluster.


UPLOAD MANIFESTS TO K8SCRUD

Create a ConfigMap with name to transfer your K8s manifest files to K8scrud, e.g.:

# Obtain the name of one of the K8scrud Pods
kubectl create cm  -n {{ include "k8scrud.namespaceName" . }} k8scrud-manifests --from-file=k8scrud-manifests/example.yaml --from-file=k8scrud-manifests/example-with-ingress.yaml

Please ensure that your manifest contains all K8s resources for your deployment in one file concatenated with "---"

MAKE DYNAMIC DEPLOYMENTS

Once your manifest file is transferred, you can dynamically deploy it by calling the K8scrud REST endpoint while stating the name of the file without suffix.

# Open a connection to K8scrud from your local machine
kubectl port-forward  -n {{ include "k8scrud.namespaceName" . }} service/k8scrud 8080

# Call the K8scrud REST endpoint for dynamic deployment creation
curl -v -H 'Content-Type:application/json' -X POST --data '{"yourEnvValue": "some-value"}' localhost:8080/example

In the request payload you can specify parameters that will be swapped out for placeholders in your manifests, e.g. '\{\{ .K8scrud.params.yourEnvValue \}\}'
Also, every deployment will generate a K8scrud deployment Id that can also be swapped out for a placeholder in the manifest: '\{\{ .K8scrud.id \}\}'

Now, a dynamic deployment has been made. The deployment id can be taken from the response body JSON from the key "k8sCrudId".

VERIFICATION

You can verify that a dynamic deployment has been made by calling:

# See all K8scrud example K8s resources
kubectl get all -l name=k8scrud-example-nginx


DELETE DEPLOYMENTS DYNAMICALLY

Deployments can be dynamically deleted like this:

# Call the K8scrud REST endpoint for dynamic deployment deletion
curl -v -X DELETE localhost:8080/example/[k8sCrudId-of-your-deployment]

Enjoy! If you questions or feature requests, please contact fritz@duchardt.net






